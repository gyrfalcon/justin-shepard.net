version: 2
jobs:
  build:
    working_directory: ~/justin-shepard.net
    docker:
      - image: circleci/node:8.11.2
    steps:
      - checkout
      - restore_cache:
          key: modules-cache-{{ checksum "yarn.lock" }}
      - run:
          name: install
          command: yarn install --frozen-lockfile
      - save_cache:
          key: modules-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ~/.cache/yarn
      - run:
          name: build
          command: yarn build
      - persist_to_workspace:
          root: .
          paths: dist
  test:
    working_directory: ~/justin-shepard.net
    docker:
      - image: circleci/node:8.11.2-browsers
    steps:
      - checkout
      - restore_cache:
          key: modules-cache-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: .
      - run:
          name: stop flow server
          command: yarn flow stop
      - run:
          name: download selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar
      - run:
          name: start selenium
          command: java -jar selenium-server-standalone-3.141.59.jar -log selenium.log
          background: true
      - run:
          name: make report directories
          command: |
            mkdir -p reports/cucumber
            mkdir -p reports/flow
      - run:
          name: test
          command: |
            yarn ci:lint
            yarn test:coverage
            yarn test:acceptance
      - store_artifacts:
          path: reports/coverage
      - store_artifacts:
          path: reports/screenshots
      - store_test_results:
          path: reports
  deploy:
    working_directory: ~/justin-shepard.net
    docker:
      - image: circleci/python:3.6.1
    steps:
      - attach_workspace:
          at: .
      - run:
          name: install aws
          command: pip install awscli --upgrade --user
      - run:
          name: s3 sync
          command: |
            ~/.local/bin/aws s3 sync --exclude "*.html" --exact-timestamps --cache-control min-age=0,max-age=43200 dist/ s3://justin-shepard.net/
            ~/.local/bin/aws s3 sync --exclude "*" --include "*.html" --exact-timestamps --cache-control max-age=0,no-cache,no-store,must-revalidate dist/ s3://justin-shepard.net/
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
